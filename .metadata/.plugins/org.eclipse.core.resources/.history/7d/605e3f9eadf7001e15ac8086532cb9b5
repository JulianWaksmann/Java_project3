package TP1_2048;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JPanel;

public class TableroPanel extends JPanel {
    private static final long serialVersionUID = 1L;
    private int tamanioTablero;
    private int margen = 10; 
    private JPanel[][] fichas;

    public TableroPanel() {
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                resizefichas();
            }
        });
    }

    private void crearFichas() {
        fichas = new JPanel[tamanioTablero][tamanioTablero];
        for (int i = 0; i < tamanioTablero; i++) {
            for (int j = 0; j < tamanioTablero; j++) {
                fichas[i][j] = new JPanel();
                fichas[i][j].setBackground(Color.RED);
                this.add(fichas[i][j]);
            }
        }
    }

    private void resizefichas() {
        int anchoContenedor = getWidth();
        int altoContenedor = getHeight();
        int anchoFicha = (anchoContenedor - (tamanioTablero - 1) * margen) / tamanioTablero - margen / 2;
        int altoFicha = (altoContenedor - (tamanioTablero - 1) * margen) / tamanioTablero - margen / 2;

        for (int i = 0; i < tamanioTablero; i++) {
            for (int j = 0; j < tamanioTablero; j++) {
                Dimension panelDimension = new Dimension(anchoFicha, altoFicha);
                fichas[i][j].setPreferredSize(panelDimension);
                fichas[i][j].setMinimumSize(panelDimension);
                fichas[i][j].setMaximumSize(panelDimension);
            }
        }

        revalidate();
        repaint();
    }

    public void setTamanioTablero(int tamanioTablero) {
    	this.tamanioTablero = tamanioTablero;
        this.removeAll(); // Elimina los paneles anteriores
        this.setLayout(new GridLayout(tamanioTablero, tamanioTablero, margen, margen));
        crearFichas();
        revalidate();
        repaint();
    }
}

